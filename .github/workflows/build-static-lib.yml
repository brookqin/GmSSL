name: Build and Release static lib

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract platform info
        id: platform
        run: |
          PLATFORM=${{ matrix.platform }}
          ARCH=${PLATFORM#*/}
          echo "arch=${ARCH}" >> $GITHUB_OUTPUT

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: ${{ matrix.platform }}
          push: false
          load: true
          tags: gmssl-builder:${{ steps.platform.outputs.arch }}

      - name: Extract libgmssl.a
        run: |
          # Create a temporary container
          CONTAINER_ID=$(docker create gmssl-builder:${{ steps.platform.outputs.arch }})
          # Copy the file from container
          docker cp $CONTAINER_ID:/GmSSL/build/bin/libgmssl.a ./libgmssl.${{ steps.platform.outputs.arch }}.a
          # Remove the container
          docker rm $CONTAINER_ID

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: libgmssl-${{ steps.platform.outputs.arch }}
          path: libgmssl.linux-${{ steps.platform.outputs.arch }}.a

  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./artifacts/libgmssl-amd64/libgmssl.linux-amd64.a
            ./artifacts/libgmssl-arm64/libgmssl.linux-arm64.a
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}